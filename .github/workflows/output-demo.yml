name: Output Demo
description: A sample workflow
on:
  workflow_dispatch:
    inputs:
      username:
        description: "The name of the user"
        default: "Oliver"
        required: true


jobs:
  prepare-job:
    runs-on: ubuntu-latest
    name: Prepare
    steps:

      - shell: bash
        run: |
          # Writing into step summary
          echo ":rocket: Preparation was successful" >> $GITHUB_STEP_SUMMARY
          echo "| Key | Value |" >> $GITHUB_STEP_SUMMARY
          echo "| --- | ----- |" >> $GITHUB_STEP_SUMMARY
          echo "| A   | 'red' |" >> $GITHUB_STEP_SUMMARY
          echo "| B   | 42    |" >> $GITHUB_STEP_SUMMARY
          echo "| C   | 3.141 |" >> $GITHUB_STEP_SUMMARY

          echo "::debug::Set the Octocat variable"
          echo "::notice file=app.js,line=1,col=5,endColumn=7::Missing semicolon"
          echo "::warning file=app.js,line=1,col=5,endColumn=7::Missing semicolon"
          echo "::error file=app.js,line=1,col=5,endColumn=7::Missing semicolon"
          echo "::add-mask::Mona The Octocat"

      - id: greet-the-user
        shell: bash
        run: |
          echo "Hello ${{ inputs.username }}"

  execute-job:
    runs-on: ubuntu-latest
    needs: [ prepare-job ]
    name: Execute
    steps:

      - shell: bash
        id: sample-outputs
        run: |
          echo "# Results" >> $GITHUB_STEP_SUMMARY

          echo "::group::My very long list"
          echo "Log output of execution"
          for i in {1..100}
          do
            echo "Log $i"
          done
          echo "::endgroup::"

          echo "::group::My title 2"
          echo "Inside group"
          echo "Inside group"
          echo "::add-mask::Mona The Octocat"
          echo "Inside group"
          echo "::endgroup::"

      - id: generate-log-file
        shell: bash
        run: |
          for i in {1..100}
          do
            echo "Log $i" > log.txt
          done

      - id: upload-log-file
        uses:  actions/upload-artifact@v3
        with:
          name: log.txt
          path: log.txt

      - name: Set the value
        id: step_one
        run: |
          echo "action_state=yellow" >> $GITHUB_ENV

      - name: Use the value
        id: step_two
        run: |
          echo "${{ env.action_state }}" # This will output 'yellow'

  validate-job:
    runs-on: ubuntu-latest
    needs: [ execute-job ]
    name: Validate
    steps:

      - shell: bash
        run: |
          echo "# Results" >> $GITHUB_STEP_SUMMARY

      - name: Overwrite Markdown
        run: |
          echo "Adding some Markdown content" >> $GITHUB_STEP_SUMMARY
          echo "There was an error, we need to clear the previous Markdown with some new content." > $GITHUB_STEP_SUMMARY

      - name: Generate list using Markdown
        run: |
          echo "This is the lead in sentence for the list" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY # this is a blank line
          echo "- Lets add a bullet point" >> $GITHUB_STEP_SUMMARY
          echo "- Lets add a second bullet point" >> $GITHUB_STEP_SUMMARY
          echo "- How about a third one?" >> $GITHUB_STEP_SUMMARY